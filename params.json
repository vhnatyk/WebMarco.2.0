{"name":"Webmarco 2.0","tagline":"Hybrid HTML5 UI crossplatform superframework :)","body":"### Welcome \r\nSimply speaking, [**WebMarco 2.0**](https://docs.google.com/presentation/d/1w0x2aMGNRd0Kcf8MHeZwDvAyn13UNG0d0AjL0jAlUyI/pub?start=false&loop=false&delayms=10000) is the most advanced (according to my fair knowledge to date:) JavaScript-to-C# bridge, build on top of Xamarin's Mono and lots of other frameworks and tools (the list of references and some legal stuff like license is yet to arrive:) - so for now let it be [MS-PL](http://opensource.org/licenses/ms-pl.html), except where references are more restrictive of course:). Here are some [**slides**](https://docs.google.com/presentation/d/1w0x2aMGNRd0Kcf8MHeZwDvAyn13UNG0d0AjL0jAlUyI/pub?start=false&loop=false&delayms=10000) with more details. \r\n\r\n\r\n\r\n### Authors and Contributors\r\nThe idea of such a JavaScript-to-C# bridge floated in the air starting from April 2013, when the previous WebMarco ghost repo appeared. It was an attempt to summarize working experience that was achieved by me(@vhnatyk) and the team while working with JStoC# bridge based on WebKit.NET (http://habrahabr.ru/post/154917/ by [amenshow](http://habrahabr.ru/users/amenshov/) - sorry, it's in Russian only:| ) that we used for crossplatform desktop apps at [Dauntless Soft](www.dauntless-soft.com). We ported that bridge to Mac and it proved to be quite stable, reliable and apps got published on AppStore, proving that the technology is ok. The same UI based on HTML in turn proved to be quite convenient to design and develop, and we ended up with virtually same sources for Windows and Mac OS X thanks to #if MAC and #if WINDOWS #endif blocks and [Monobjc](http://www.monobjc.net/)).\r\n\r\nThe main idea behind this bridge is to use sort of responsive local website as frontend that fits all screens on all supported platforms thanks to Xamarin and Mono, Responsive design, HTML5, CSS3, jQuery with full-fledged AJAX and C# backend as a core of the bridge:\r\n\r\n```\r\n    $.ajax({\r\n        //crossOrigin: true,\r\n        async: callConfig.IsAsync, //true,\r\n        type: 'POST',\r\n        url: 'http://' + serverIP + ':' + serverInstancePort + '/' + serverInstanceUid + '/callbackend?params=' + encodeURIComponent(JSON.stringify(callConfig)),\r\n       // data: callConfig,\r\n        success: function (responseData) {\r\n            console.log('ajax success');\r\n            var callbackConfig = null;\r\n            try {\r\n                callbackConfig = JSON.parse(responseData);\r\n            } catch (e) { }\r\n            if (isEmpty(callbackConfig)) {\r\n                result = responseData;//doesn't contain callback config\r\n            } else {\r\n                console.log('backendCallResultHandler :' + callbackConfig.MethodName);\r\n                result = backendCallResultHandler(callbackConfig);//result, probably is unnecessary here, but can be used\r\n            }\r\n        },\r\n        error: function (request, status, err) {\r\n            var ajaxResult = 'ajax error : ' + err;\r\n            console.log(ajaxResult);\r\n            result = ajaxResult;\r\n        }\r\n    });\r\n```\r\n\r\n### Support or Contact\r\nHaving trouble with [WebMarco 2.0](https://docs.google.com/presentation/d/1w0x2aMGNRd0Kcf8MHeZwDvAyn13UNG0d0AjL0jAlUyI/pub?start=false&loop=false&delayms=10000)? The documentation is on its way:) In the mean time you may contact me at vhnatyk@gmail.com and weâ€™ll try to help you sort it out.\r\n\r\n***\r\n\r\nVitaliy Hnatyk \r\n\r\nTech Lead at Dauntless Soft\r\n","google":"UA-54920835-1","note":"Don't delete this file! It's used internally to help with page regeneration."}